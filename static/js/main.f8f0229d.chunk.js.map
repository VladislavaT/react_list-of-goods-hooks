{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goodsList","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetVisible","className","type","classNames","onClick","currentState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAoCC,IAAMC,UAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCH,IAAMC,SAASJ,EAASO,MAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA/BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAqBzB,OAnBIH,GACFI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKR,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXd,GACFO,EAAaQ,UAGRR,EAMWS,CAAkBpB,EAAiB,CACnDO,WACAH,eAEIiB,EAAiBd,IAAaR,EAASO,MAAQF,EAmBrD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYjB,IAAaR,EAASgB,WAEpCU,QAzBe,WACrBjB,EAAYT,EAASgB,WAmBjB,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYjB,IAAaR,EAASkB,SAEpCQ,QA/Ba,WACnBjB,EAAYT,EAASkB,SAyBjB,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAapB,IAEfqB,QArCc,WACpBpB,GAAc,SAAAqB,GAAY,OAAKA,MA+B3B,qBAUEL,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBpB,GAAc,GACdG,EAAYT,EAASO,OAqCf,sBAUJ,6BACE,6BACGG,EAAUkB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC9HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f8f0229d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = React.useState(false);\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n  const goodsList = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n  const isResetVisible = sortType !== SortType.NONE || isReversed;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(currentState => !currentState);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(isResetVisible) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goodsList.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}